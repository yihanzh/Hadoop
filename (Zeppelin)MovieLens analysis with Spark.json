{"paragraphs":[{"text":"%md\n### Set up the interpreters\nStart by clicking the gear icon above to bind interpeters. Drag Spark to the top of the list if it isn't there already, and hit \"save\".","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Set up the interpreters</h3>\n<p>Start by clicking the gear icon above to bind interpeters. Drag Spark to the top of the list if it isn't there already, and hit &ldquo;save&rdquo;.</p>\n"}]},"apps":[],"jobName":"paragraph_1630271400624_-1715568931","id":"20170209-153235_273152381","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2704"},{"text":"%md\n### Make sure Spark is set up OK\nHit the \"play\" button in the next block of code - it might take a minute or two, but you should see the Spark version that we're using when it finishes.","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Make sure Spark is set up OK</h3>\n<p>Hit the &ldquo;play&rdquo; button in the next block of code - it might take a minute or two, but you should see the Spark version that we're using when it finishes.</p>\n"}]},"apps":[],"jobName":"paragraph_1630271400625_-1715953680","id":"20170209-153407_1909288552","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2705"},{"title":"Check Spark version","text":"sc.version","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res61: String = 1.6.2\n"}]},"apps":[],"jobName":"paragraph_1630271400625_-1715953680","id":"20170209-153745_362251663","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2706"},{"text":"%md\n### Want to learn Scala?\nScala is, in my opinion, the best language to use when developing Spark applications. Here's a [Scala Basics Tutorial](http://www.dhgarrette.com/nlpclass/scala/basics.html).","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":75,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Want to learn Scala?</h3>\n<p>Scala is, in my opinion, the best language to use when developing Spark applications. Here's a <a href=\"http://www.dhgarrette.com/nlpclass/scala/basics.html\">Scala Basics Tutorial</a>.</p>\n"}]},"apps":[],"jobName":"paragraph_1630271400626_-1714799433","id":"20170209-153607_4639725","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2707"},{"title":"Download raw MovieLens data","text":"%sh\n\n# You will now download a subset of the MovieLens dataset (only 100k lines, movie ratings and movie metadata only.)\n# The full dataset may be found at http://grouplens.org\n\nwget http://media.sundog-soft.com/hadoop/ml-100k/u.data -O /tmp/u.data\nwget http://media.sundog-soft.com/hadoop/ml-100k/u.item -O /tmp/u.item\necho \"Downloaded!\"","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Downloaded!\n"}]},"apps":[],"jobName":"paragraph_1630271400627_-1715184182","id":"20170209-153832_17842132","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2708"},{"title":"Put into HDFS under /tmp/ml-100k","text":"%sh\n\n# remove existing copies of dataset from HDFS\nhadoop fs -rm -r -f /tmp/ml-100k\n\n# create directory on HDFS\nhadoop fs -mkdir /tmp/ml-100k\n\n# put data into HDFS\nhadoop fs -put /tmp/u.data /tmp/ml-100k/\nhadoop fs -put /tmp/u.item /tmp/ml-100k/","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"title":true,"results":[],"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1630271400627_-1715184182","id":"20170209-154307_868490707","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2709"},{"title":"Convert ratings data to a Spark DataFrame","text":"final case class Rating(movieID: Int, rating: Int)\r\n\r\nval lines = sc.textFile(\"hdfs:///tmp/ml-100k/u.data\").map(x => {val fields = x.split(\"\\t\"); Rating(fields(1).toInt, fields(2).toInt)})\r\n\r\n// Convert to a DataFrame\r\nimport sqlContext.implicits._\r\nval ratingsDF = lines.toDF()\r\n\r\nratingsDF.printSchema()","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there were 1 unchecked warning(s); re-run with -unchecked for details\ndefined class Rating\nlines: org.apache.spark.rdd.RDD[Rating] = MapPartitionsRDD[343] at map at <console>:90\nimport sqlContext.implicits._\nratingsDF: org.apache.spark.sql.DataFrame = [movieID: int, rating: int]\nroot\n |-- movieID: integer (nullable = false)\n |-- rating: integer (nullable = false)\n\n"}]},"apps":[],"jobName":"paragraph_1630271400628_-1717107927","id":"20170209-155446_1506165769","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2710"},{"title":"Find most-rated movie ID's","text":"// Some SQL-style magic to sort all movies by popularity in one line!\r\nval topMovieIDs = ratingsDF.groupBy(\"movieID\").count().orderBy(desc(\"count\")).cache()\r\n    \r\ntopMovieIDs.show()","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"topMovieIDs: org.apache.spark.sql.DataFrame = [movieID: int, count: bigint]\n+-------+-----+\n|movieID|count|\n+-------+-----+\n|     50|  584|\n|    258|  509|\n|    100|  508|\n|    181|  507|\n|    294|  485|\n|    286|  481|\n|    288|  478|\n|      1|  452|\n|    300|  431|\n|    121|  429|\n|    174|  420|\n|    127|  413|\n|     56|  394|\n|      7|  392|\n|     98|  390|\n|    237|  384|\n|    117|  378|\n|    172|  368|\n|    222|  365|\n|    313|  350|\n+-------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1630271400629_-1717492675","id":"20170209-164156_1237996116","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2711"},{"title":"Expose ratings as a SQL table","text":"ratingsDF.registerTempTable(\"ratings\")\n","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1630271400629_-1717492675","id":"20170209-160624_2046065823","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2712"},{"title":"Query the ratings DataFrame via SparkSQL","text":"%sql\n\nSELECT * FROM ratings LIMIT 10\n","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"movieID\trating\n50\t5\n172\t5\n133\t1\n242\t3\n302\t3\n377\t1\n51\t2\n346\t1\n474\t4\n265\t2\n"}]},"apps":[],"jobName":"paragraph_1630271400630_-1716338429","id":"20170209-162457_1569352528","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2713"},{"title":"Aggregate by rating (try the visualization options!)","text":"%sql\nSELECT rating, COUNT(*) as count FROM ratings GROUP BY rating","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"rating","index":0,"aggr":"sum"}],"values":[{"name":"count","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"rating","index":0,"aggr":"sum"}}}}],"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"rating\tcount\n1\t6111\n2\t11370\n3\t27145\n4\t34174\n5\t21203\n"}]},"apps":[],"jobName":"paragraph_1630271400630_-1716338429","id":"20170209-162510_821025355","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2714"},{"title":"Convert movie titles into a DataFrame","text":"final case class Movie(movieID: Int, title: String)\r\n\r\nval lines = sc.textFile(\"hdfs:///tmp/ml-100k/u.item\").map(x => {val fields = x.split('|'); Movie(fields(0).toInt, fields(1))})\r\n\r\n// Convert to a DataFrame\r\nimport sqlContext.implicits._\r\nval moviesDF = lines.toDF()\r\n\r\nmoviesDF.show()\r\n","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there were 1 unchecked warning(s); re-run with -unchecked for details\ndefined class Movie\nlines: org.apache.spark.rdd.RDD[Movie] = MapPartitionsRDD[374] at map at <console>:93\nimport sqlContext.implicits._\nmoviesDF: org.apache.spark.sql.DataFrame = [movieID: int, title: string]\n+-------+--------------------+\n|movieID|               title|\n+-------+--------------------+\n|      1|    Toy Story (1995)|\n|      2|    GoldenEye (1995)|\n|      3|   Four Rooms (1995)|\n|      4|   Get Shorty (1995)|\n|      5|      Copycat (1995)|\n|      6|Shanghai Triad (Y...|\n|      7|Twelve Monkeys (1...|\n|      8|         Babe (1995)|\n|      9|Dead Man Walking ...|\n|     10|  Richard III (1995)|\n|     11|Seven (Se7en) (1995)|\n|     12|Usual Suspects, T...|\n|     13|Mighty Aphrodite ...|\n|     14|  Postino, Il (1994)|\n|     15|Mr. Holland's Opu...|\n|     16|French Twist (Gaz...|\n|     17|From Dusk Till Da...|\n|     18|White Balloon, Th...|\n|     19|Antonia's Line (1...|\n|     20|Angels and Insect...|\n+-------+--------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1630271400631_-1716723178","id":"20170209-162559_1194279704","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2715"},{"title":"Expose titles as a SQL table","text":"moviesDF.registerTempTable(\"titles\")","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1630271400632_-1718646922","id":"20170209-163125_1074972764","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2716"},{"title":"Join ratings and titles to find most-rated movies with names","text":"%sql SELECT t.title, count(*) cnt FROM ratings r JOIN titles t ON r.movieID = t.movieID GROUP BY t.title ORDER BY cnt DESC LIMIT 20","dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"title","index":0,"aggr":"sum"}],"values":[{"name":"cnt","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"title","index":0,"aggr":"sum"},"yAxis":{"name":"cnt","index":1,"aggr":"sum"}}}}],"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"title\tcnt\nStar Wars (1977)\t584\nContact (1997)\t509\nFargo (1996)\t508\nReturn of the Jedi (1983)\t507\nLiar Liar (1997)\t485\nEnglish Patient, The (1996)\t481\nScream (1996)\t478\nToy Story (1995)\t452\nAir Force One (1997)\t431\nIndependence Day (ID4) (1996)\t429\nRaiders of the Lost Ark (1981)\t420\nGodfather, The (1972)\t413\nPulp Fiction (1994)\t394\nTwelve Monkeys (1995)\t392\nSilence of the Lambs, The (1991)\t390\nJerry Maguire (1996)\t384\nChasing Amy (1997)\t379\nRock, The (1996)\t378\nEmpire Strikes Back, The (1980)\t368\nStar Trek: First Contact (1996)\t365\n"}]},"apps":[],"jobName":"paragraph_1630271400632_-1718646922","id":"20170209-163536_419383592","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2717"},{"dateUpdated":"2021-08-29T21:10:00+0000","config":{"colWidth":12,"results":[],"enabled":true,"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1630271400633_-1719031671","id":"20170209-163736_1774997433","dateCreated":"2021-08-29T21:10:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2718"}],"name":"MovieLens analysis with Spark","id":"2GDC1C34X","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}